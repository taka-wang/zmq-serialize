/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: type2.proto */

#ifndef PROTOBUF_C_type2_2eproto__INCLUDED
#define PROTOBUF_C_type2_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Main__CmdHeader Main__CmdHeader;
typedef struct _Main__MbTcpHeader Main__MbTcpHeader;
typedef struct _Main__MbWriteRequest Main__MbWriteRequest;
typedef struct _Main__MbTcpSingleWriteReq Main__MbTcpSingleWriteReq;


/* --- enums --- */


/* --- messages --- */

struct  _Main__CmdHeader
{
  ProtobufCMessage base;
  /*
   * receiver
   */
  char *receiver;
  /*
   * sender
   */
  char *sender;
  /*
   * protocol version
   */
  char *version;
  uint64_t tid;
  /*
   * command name
   */
  char *method;
};
#define MAIN__CMD_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main__cmd_header__descriptor) \
    , NULL, NULL, NULL, 0, NULL }


struct  _Main__MbTcpHeader
{
  ProtobufCMessage base;
  char *ip;
  uint32_t port;
  uint32_t id;
};
#define MAIN__MB_TCP_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main__mb_tcp_header__descriptor) \
    , NULL, 0, 0 }


struct  _Main__MbWriteRequest
{
  ProtobufCMessage base;
  /*
   * modbus function code
   */
  uint32_t code;
  /*
   * register start address
   */
  uint32_t register_;
  /*
   * data value
   */
  char *value;
  /*
   * data type
   */
  char *type;
  /*
   * human friendly name
   */
  char *alias;
};
#define MAIN__MB_WRITE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main__mb_write_request__descriptor) \
    , 0, 0, NULL, NULL, NULL }


struct  _Main__MbTcpSingleWriteReq
{
  ProtobufCMessage base;
  Main__CmdHeader *cmd_header;
  Main__MbTcpHeader *mb_tcp_header;
  Main__MbWriteRequest *mb_write_request;
};
#define MAIN__MB_TCP_SINGLE_WRITE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main__mb_tcp_single_write_req__descriptor) \
    , NULL, NULL, NULL }


/* Main__CmdHeader methods */
void   main__cmd_header__init
                     (Main__CmdHeader         *message);
size_t main__cmd_header__get_packed_size
                     (const Main__CmdHeader   *message);
size_t main__cmd_header__pack
                     (const Main__CmdHeader   *message,
                      uint8_t             *out);
size_t main__cmd_header__pack_to_buffer
                     (const Main__CmdHeader   *message,
                      ProtobufCBuffer     *buffer);
Main__CmdHeader *
       main__cmd_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main__cmd_header__free_unpacked
                     (Main__CmdHeader *message,
                      ProtobufCAllocator *allocator);
/* Main__MbTcpHeader methods */
void   main__mb_tcp_header__init
                     (Main__MbTcpHeader         *message);
size_t main__mb_tcp_header__get_packed_size
                     (const Main__MbTcpHeader   *message);
size_t main__mb_tcp_header__pack
                     (const Main__MbTcpHeader   *message,
                      uint8_t             *out);
size_t main__mb_tcp_header__pack_to_buffer
                     (const Main__MbTcpHeader   *message,
                      ProtobufCBuffer     *buffer);
Main__MbTcpHeader *
       main__mb_tcp_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main__mb_tcp_header__free_unpacked
                     (Main__MbTcpHeader *message,
                      ProtobufCAllocator *allocator);
/* Main__MbWriteRequest methods */
void   main__mb_write_request__init
                     (Main__MbWriteRequest         *message);
size_t main__mb_write_request__get_packed_size
                     (const Main__MbWriteRequest   *message);
size_t main__mb_write_request__pack
                     (const Main__MbWriteRequest   *message,
                      uint8_t             *out);
size_t main__mb_write_request__pack_to_buffer
                     (const Main__MbWriteRequest   *message,
                      ProtobufCBuffer     *buffer);
Main__MbWriteRequest *
       main__mb_write_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main__mb_write_request__free_unpacked
                     (Main__MbWriteRequest *message,
                      ProtobufCAllocator *allocator);
/* Main__MbTcpSingleWriteReq methods */
void   main__mb_tcp_single_write_req__init
                     (Main__MbTcpSingleWriteReq         *message);
size_t main__mb_tcp_single_write_req__get_packed_size
                     (const Main__MbTcpSingleWriteReq   *message);
size_t main__mb_tcp_single_write_req__pack
                     (const Main__MbTcpSingleWriteReq   *message,
                      uint8_t             *out);
size_t main__mb_tcp_single_write_req__pack_to_buffer
                     (const Main__MbTcpSingleWriteReq   *message,
                      ProtobufCBuffer     *buffer);
Main__MbTcpSingleWriteReq *
       main__mb_tcp_single_write_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main__mb_tcp_single_write_req__free_unpacked
                     (Main__MbTcpSingleWriteReq *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Main__CmdHeader_Closure)
                 (const Main__CmdHeader *message,
                  void *closure_data);
typedef void (*Main__MbTcpHeader_Closure)
                 (const Main__MbTcpHeader *message,
                  void *closure_data);
typedef void (*Main__MbWriteRequest_Closure)
                 (const Main__MbWriteRequest *message,
                  void *closure_data);
typedef void (*Main__MbTcpSingleWriteReq_Closure)
                 (const Main__MbTcpSingleWriteReq *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor main__cmd_header__descriptor;
extern const ProtobufCMessageDescriptor main__mb_tcp_header__descriptor;
extern const ProtobufCMessageDescriptor main__mb_write_request__descriptor;
extern const ProtobufCMessageDescriptor main__mb_tcp_single_write_req__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_type2_2eproto__INCLUDED */